e_river(serie = c('apples', 'bananas')) %>%
e_tooltip(trigger = "axis") %>%
e_title("River charts", "(Streamgraphs)")
river %>%
e_charts(dates) %>%
e_river(serie = c('apples', 'bananas')) %>%
e_tooltip(trigger = "axis") %>%
e_title("River charts", "(Streamgraphs)")
river %>%
e_charts(dates) %>%
e_river(serie = list('apples', 'bananas')) %>%
e_tooltip(trigger = "axis") %>%
e_title("River charts", "(Streamgraphs)")
river %>%
e_charts(dates) %>%
e_river(apples, label = list(show = TRUE)) %>%
e_river(bananas) %>%
e_river(pears) %>%
e_tooltip(trigger = "axis") %>%
e_title("River charts", "(Streamgraphs)")
river %>%
e_charts(dates) %>%
e_river(apples) %>%
e_river(bananas) %>%
e_river(pears) %>%
e_tooltip(trigger = "axis") %>%
e_title("River charts", "(Streamgraphs)") %>%
e_tooltip(
axisPointer = list(type = 'cross')
) %>%
e_theme(name = 'red') %>%
e_toolbox() %>%
e_toolbox_feature(feature = 'saveAsImage')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
?e_datazoom
runApp('shiny')
runApp('shiny')
river %>%
e_charts(dates) %>%
e_river(apples, label = list(show = TRUE)) %>%
e_river(bananas) %>%
e_river(pears) %>%
e_tooltip(trigger = "axis") %>%
e_title("River charts", "(Streamgraphs)")
runApp('shiny')
?e_toolbox_feature
runApp('shiny')
dates <- seq.Date(as.Date("2017-01-01"), as.Date("2018-12-31"), by = "day")
values <- rnorm(length(dates), 20, 6)
year <- data.frame(date = dates, values = values)
year %>% head()
?e_calendar
year %>%
e_charts(date) %>%
e_calendar(range = c(2017, 2018)) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
year %>%
e_charts(date) %>%
e_calendar(range = c("2017", "2018")) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
year %>%
e_charts(date) %>%
e_calendar(range = c("20170101", "20181231")) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
year %>%
e_charts(date) %>%
e_calendar(range = c("2017-01-01", "2018-12-31")) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
year %>%
e_charts(date) %>%
e_calendar(range = list("2017-01-01", "2018-12-31")) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
year %>%
e_charts(date) %>%
e_calendar(range = c("2017-01-01", "2017-11-30")) %>%
e_calendar(range = c("2018-01-01", "2018-12-15")) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
year %>%
mutate(year = format(date, '%Y')) %>%
group_by(year) %>%
e_charts(date) %>%
e_calendar(range = c("2017-01-01", "2018-12-31")) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
year %>%
mutate(year = format(date, '%Y')) %>%
group_by(year) %>%
e_charts(date) %>%
e_calendar(range = c("2017-01-01", "2018-02-01")) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
year %>%
e_charts(date) %>%
e_calendar(range = c("2017-01-01", "2018-02-01")) %>%
e_heatmap(values, coord_system = "calendar") %>%
e_visual_map(max = 30) %>%
e_title("Calendar", "Heatmap")
e_charts() %>%
e_gauge(41, "PERCENT") %>%
e_title("Gauge")
?e_gauge
e_charts() %>%
e_gauge(41, "PERCENT", startAngle = 180, endAngle = -90) %>%
e_title("Gauge")
e_charts() %>%
e_gauge(41, "PERCENT", min = 0, max = 1000, splitNumber = 100) %>%
e_title("Gauge")
e_charts() %>%
e_gauge(410, "PERCENT", min = 0, max = 1000, splitNumber = 100) %>%
e_title("Gauge")
e_charts() %>%
e_gauge(410, "PERCENT", min = 0, max = 1000, splitNumber = 10) %>%
e_title("Gauge")
value = 41
name = 'Percent'
startAngle = 225
endAngle = -45
min = 0
max = 100
splitNumber = 10
?textInput
?numericInput
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
?e_gauge
e_charts() %>%
e_gauge(
value = 50,
name = 'Percent',
min = 0,
max = 100,
splitNumber = 10
) %>%
e_title(text = '仪表盘') %>%
e_theme(name = 'red') %>%
e_toolbox() %>%
e_toolbox_feature(feature = 'saveAsImage')
runApp('shiny')
req(input$gauge_value)
runApp('shiny')
?numericInput
?e_gauge_
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
df <- data.frame(
x = LETTERS[1:5],
y = runif(5, 1, 5),
z = runif(5, 3, 7)
)
df
df %>%
e_charts(x) %>%
e_radar(y, max = 7, name = "radar") %>%
e_radar(z, max = 7, name = "chart") %>%
e_tooltip(trigger = "item")
df <- data.frame(
x = req(LETTERS[1:5], 2),
)
df <- data.frame(
x = req(LETTERS[1:5], 2),
value = rnorm(10),
cate = c(req('a', 5), req('b'), 5)
)
df <- data.frame(
x = req(LETTERS[1:5], 2),
value = rnorm(10),
cate = c(req('a', 5), req('b', 5))
)
df
df <- data.frame(
x = req(LETTERS[1:5], 2),
value = rnorm(10),
cate = req(c('a', 'b'), 5)
)
df
?req
??req
df <- data.frame(
x = req(LETTERS[1:5], 2),
value = rnorm(10),
cate = rep(c('a', 'b'), 5)
)
df
?rep
rep(1:4, each = 2)
df <- data.frame(
x = req(LETTERS[1:5], 2),
value = rnorm(10),
cate = rep(c('a', 'b'), each = 5)
)
df
df %>%
group_by(cate) %>%
e_charts(x) %>%
e_radar(value)
df %>%
group_by(cate) %>%
e_charts(x) %>%
e_radar(value) %>%
e_tooltip(trigger = 'item')
words <- function(n = 5000) {
a <- do.call(paste0, replicate(5, sample(LETTERS, n, TRUE), FALSE))
paste0(a, sprintf("%04d", sample(9999, n, TRUE)), sample(LETTERS, n, TRUE))
}
tf <- data.frame(terms = words(100),
freq = rnorm(100, 55, 10)) %>%
dplyr::arrange(-freq)
tf %>%
e_color_range(freq, color) %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "circle", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
head(tf)
dim(df)
dim(tf)
tf %>% count(terms) %>% arrange(desc(n))
?e_color_range
head(tf)
tf %>%
e_color_range(freq, color) %>%
head()
?e_cloud
tf %>%
e_color_range(freq, color) %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "triangle", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_color_range(freq, color) %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "bird", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_color_range(freq, color) %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "square", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_color_range(freq, color) %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "cardioid", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_color_range(freq, color) %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "star", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "star", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_charts() %>%
e_cloud(terms, freq, shape = "star", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_color_range(freq, color) %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "star", sizeRange = c(3, 50)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_color_range(freq, color) %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "star", sizeRange = c(3, 25)) %>%
e_title("Wordcloud", "Random strings")
# 词云的形状
word_shape <- read_csv("shiny/data/word_shape.csv")
?e_color_range
?e_cloud
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
tf %>%
e_charts() %>%
e_cloud(terms, freq, color, shape = "star", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
tf %>%
e_charts() %>%
e_cloud(terms, freq, shape = "star", sizeRange = c(3, 15)) %>%
e_title("Wordcloud", "Random strings")
head(word_shape)
runApp('shiny')
liquid <- data.frame(val = c(0.6, 0.5, 0.4))
liquid
?e_liquid
df %>%
e_charts() %>%
e_liquid(val) %>%
e_theme("dark")
df <- data.frame(val = c(0.6, 0.5, 0.4))
df %>%
e_charts() %>%
e_liquid(val) %>%
e_theme("dark")
runApp('shiny')
runApp('shiny')
runApp('shiny')
sessionInfo()
shiny::runApp('shiny')
sessionInfo()
library(vroom)
?vroom
word_cloud <- vroom('D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
?file_ext
library(tools)
?file_ext
tools::file_ext('D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
?switch
require(stats)
centre <- function(x, type) {
switch(type,
mean = mean(x),
median = median(x),
trimmed = mean(x, trim = .1))
}
x <- rcauchy(10)
x
centre(x, "mean")
mean(10)
switch("color", "color" = "red", "shape" = "square", "length" = 5)
switch("length", "color" = "red", "shape" = "square", "length" = 5)
library(shiny)
library(shinydashboard)
library(shinyWidgets)
library(ctmm)
library(data.table)
library(magrittr)
library(ctmmweb)
library(echarts4r)
library(echarts4r.maps)
library(tidyverse)
library(readxl)
?tools::file_ext
?file_ext
?vroom
library(vroom)
# read data of different format
read_file <- function(input_file) {
ext <- tools::file_ext(input_file)
switch(
ext,
xlsx = read_xlsx(input_file),
xls = read_xls(input_file),
csv = vroom::vroom(input_file),
tsv = vroom::vroom(input_file, delim = '\t')
)
return(ext)
}
read_file(input_file = 'D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
# read data of different format
read_file <- function(input_file) {
ext <- tools::file_ext(input_file)
switch(
ext,
xlsx = read_xlsx(input_file),
xls = read_xls(input_file),
csv = vroom::vroom(input_file),
tsv = vroom::vroom(input_file, delim = '\t'),
validate("Invalid file; Please upload a .xlsx, .xls, .csv or .tsv file")
)
return(ext)
}
read_file(input_file = 'D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
read_file
read_xlsx('D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
# read data of different format
read_file <- function(input_file_chart_chart) {
ext <- tools::file_ext(input_file_chart)
switch(
ext,
xlsx = readxl::read_xlsx(input_file_chart),
xls = readxl::read_xls(input_file_chart),
csv = vroom::vroom(input_file_chart),
tsv = vroom::vroom(input_file_chart, delim = '\t'),
validate("Invalid file; Please upload a .xlsx, .xls, .csv or .tsv file")
)
return(ext)
}
read_file(input_file_chart = 'D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
# read data of different format
read_file <- function(input_file_chart) {
ext <- tools::file_ext(input_file_chart)
switch(
ext,
xlsx = readxl::read_xlsx(input_file_chart),
xls = readxl::read_xls(input_file_chart),
csv = vroom::vroom(input_file_chart),
tsv = vroom::vroom(input_file_chart, delim = '\t'),
validate("Invalid file; Please upload a .xlsx, .xls, .csv or .tsv file")
)
return(ext)
}
read_file(input_file_chart = 'D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
switch("length", "color" = "red", "shape" = "square", "length" = 5)
# read data of different format
read_file <- function(input_file_chart) {
ext <- tools::file_ext(input_file_chart)
switch(
ext,
"xlsx" = readxl::read_xlsx(input_file_chart),
xls = readxl::read_xls(input_file_chart),
csv = vroom::vroom(input_file_chart),
tsv = vroom::vroom(input_file_chart, delim = '\t'),
validate("Invalid file; Please upload a .xlsx, .xls, .csv or .tsv file")
)
return(ext)
}
read_file(input_file_chart = 'D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
ext <- tools::file_ext('D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
ext
xlsx
'D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx'
xlsx = readxl::read_xlsx('D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
xlsx
# read data of different format
read_file <- function(input_file_chart) {
ext <- tools::file_ext(input_file_chart)
ext = switch(
ext,
xlsx = readxl::read_xlsx(input_file_chart),
xls = readxl::read_xls(input_file_chart),
csv = vroom::vroom(input_file_chart),
tsv = vroom::vroom(input_file_chart, delim = '\t'),
validate("Invalid file; Please upload a .xlsx, .xls, .csv or .tsv file")
)
return(ext)
}
read_file(input_file_chart = 'D:/sugs/shiny/test_data/wordcloud_test_xlsx.xlsx')
read_file(input_file_chart = 'D:/sugs/shiny/test_data/sankey_test.csv')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
tmp_wordcloud <- read_csv("data/tmp_data/wordcloud.csv")
tmp_wordcloud <- read_csv("shiny/data/tmp_data/wordcloud.csv")
runApp('shiny')
runApp('shiny')
runApp('shiny')
getwd()
shiny::runApp()
getwd()
setwd("C:/Users/sugs0/Documents")
su_candle <- read_csv("shiny/data/tmp_data/candle.csv")
su_candle %>%
e_charts(`最大值`) %>%
e_candle(`开盘价`, `收盘价`, `最高价`, `最低价`)
head(su_candle)
su_candle %>%
e_charts(`日期`) %>%
e_candle(`开盘价`, `收盘价`, `最高价`, `最低价`)
runApp('shiny')
runApp('shiny')
su_funnel <- read_csv("data/tmp_data/funnel.csv")
su_funnel <- read_csv("shiny/data/tmp_data/funnel.csv")
head(su_funnel)
su_funnel %>%
e_charts() %>%
e_funnel(values = values, labels = labels)
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
su_parallel <- read_csv("data/tmp_data/parallel.csv")
su_parallel_colnames <- colnames(su_parallel())
su_parallel <- read_csv("shiny/data/tmp_data/parallel.csv")
su_parallel_colnames <- colnames(su_parallel)
su_parallel %>%
e_charts() %>%
e_parallel(parallel_colnames )
su_parallel %>%
e_charts_() %>%
e_parallel_(parallel_colnames)
parallel_colnames
su_parallel
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
runApp('shiny')
shiny::runApp()
runApp()
